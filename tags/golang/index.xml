<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Golang on 味次酱博客</title>
    <link>http://localhost:1313/tags/golang/</link>
    <description>Recent content in Golang on 味次酱博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 24 Dec 2018 20:20:17 +0800</lastBuildDate>
    
	<atom:link href="http://localhost:1313/tags/golang/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>45min快速掌握Golang(二)</title>
      <link>http://localhost:1313/post/45min-quick-study-golang-part2/</link>
      <pubDate>Mon, 24 Dec 2018 20:20:17 +0800</pubDate>
      
      <guid>http://localhost:1313/post/45min-quick-study-golang-part2/</guid>
      <description>一、Golang 如何面向对象 1. 1 new 、&amp;amp; 和 * 的关系 &amp;amp;type: 取指向 type 的内存地址，类似 C/C++的。 new(type)：初始化对象，对象的属性初</description>
    </item>
    
    <item>
      <title>45min快速掌握Golang(一)</title>
      <link>http://localhost:1313/post/45min-quick-study-golang-part1/</link>
      <pubDate>Mon, 24 Dec 2018 17:45:17 +0800</pubDate>
      
      <guid>http://localhost:1313/post/45min-quick-study-golang-part1/</guid>
      <description>一、Golang 如何定义变量 在 golang 里面，定义变量用 var keyword 格式 var variable_name vairable_type 1 2 var x string var x string = &amp;#34;Hello Golang&amp;#34; 也可以省略定义变量类型 1 x := &amp;#34;Hello Golang&amp;#34; // var x string = &amp;#34;Hello Golang&amp;#34; 变量类型：</description>
    </item>
    
  </channel>
</rss>